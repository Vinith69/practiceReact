{"version":3,"sources":["Components/AddComponent.jsx","App.js","reportWebVitals.js","index.js"],"names":["AddComponent","useState","Math","floor","random","num1","setNum1","num2","setNum2","score","setScore","realAnswer","setRealAnswer","myAnswer","setMyAnswer","answer","setAnswer","count","setCount","addFunction","e","output","parseInt","className","value","onChange","target","type","name","placeholder","onKeyPress","charCode","autoComplete","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNA0EeA,MAxEf,WAAyB,IAAD,EACCC,mBAASC,KAAKC,MAAM,EAAI,EAAAD,KAAKE,WAD9B,mBAChBC,EADgB,KACVC,EADU,OAECL,mBAASC,KAAKC,MAAM,EAAI,EAAAD,KAAKE,WAF9B,mBAEhBG,EAFgB,KAEVC,EAFU,OAGGP,mBAAS,GAHZ,mBAGhBQ,EAHgB,KAGTC,EAHS,OAIaT,mBAAS,IAJtB,mBAIhBU,EAJgB,KAIJC,EAJI,OAKSX,mBAAS,IALlB,mBAKhBY,EALgB,KAKNC,EALM,OAMKb,mBAAS,IANd,mBAMhBc,EANgB,KAMRC,EANQ,OAOGf,mBAAS,GAPZ,mBAOhBgB,EAPgB,KAOTC,EAPS,KAmBjBC,EAAc,SAAAC,GAKL,IAAVH,GAGHC,EAAS,GAGV,IAAIG,EAAShB,EAAOE,EACpBK,EAAc,cAAD,OAAeP,EAAf,cAAyBE,EAAzB,cAAmCc,IAChDP,EAAY,qBAAD,OAAsBC,IAE7BO,SAASP,KAAYM,GACxBX,EAASD,EAAQ,GACjBS,EAASD,EAAQ,IAEH,IAAVR,GACHC,EAASD,EAAQ,GAInBH,EAAQJ,KAAKC,MAvBH,EAuBe,EAAAD,KAAKE,WAC9BI,EAAQN,KAAKC,MAxBH,EAwBe,EAAAD,KAAKE,WAC9BY,EAAU,KAGX,OACC,gCACC,6CAAgBP,KAChB,sBAAKc,UAAU,cAAf,UACC,6BAAKlB,IACL,mCACA,6BAAKE,OAGN,uBACCiB,MAAOT,EACPU,SA5CiB,SAAAL,GACnBJ,EAAUI,EAAEM,OAAOF,QA4CjBG,KAAK,OACLC,KAAK,SACLC,YAAY,WACZC,WAtDkB,SAAAV,GACD,KAAfA,EAAEW,UACU,KAAXhB,GAAeI,EAAYC,IAqD9BY,aAAa,QAEd,6BAAKrB,IACL,6BAAKE,QCzDOoB,MATf,WACC,OACC,sBAAKV,UAAU,YAAf,UACC,sEACA,cAAC,EAAD,QCKYW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2e731288.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction AddComponent() {\r\n\tconst [num1, setNum1] = useState(Math.floor(1 + Math.random() * (10 - 1)));\r\n\tconst [num2, setNum2] = useState(Math.floor(1 + Math.random() * (10 - 1)));\r\n\tconst [score, setScore] = useState(0);\r\n\tconst [realAnswer, setRealAnswer] = useState(\"\");\r\n\tconst [myAnswer, setMyAnswer] = useState(\"\");\r\n\tconst [answer, setAnswer] = useState(\"\");\r\n\tconst [count, setCount] = useState(0);\r\n\r\n\tconst handleAnswer = e => {\r\n\t\tif (e.charCode === 13) {\r\n\t\t\tif (answer !== \"\") addFunction(e);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleInput = e => {\r\n\t\tsetAnswer(e.target.value);\r\n\t};\r\n\r\n\tconst addFunction = e => {\r\n\t\tlet min = 3;\r\n\t\tlet max = 10;\r\n\t\t// console.log(count, min);\r\n\r\n\t\tif (count === 3) {\r\n\t\t\t// min += 2;\r\n\t\t\t// max += 3;\r\n\t\t\tsetCount(0);\r\n\t\t}\r\n\r\n\t\tlet output = num1 + num2;\r\n\t\tsetRealAnswer(`Previous : ${num1} + ${num2} = ${output}`);\r\n\t\tsetMyAnswer(`Your answer was : ${answer}`);\r\n\r\n\t\tif (parseInt(answer) === output) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t\tsetCount(count + 1);\r\n\t\t} else {\r\n\t\t\tif (score !== 0) {\r\n\t\t\t\tsetScore(score - 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsetNum1(Math.floor(min + Math.random() * (max - min)));\r\n\t\tsetNum2(Math.floor(min + Math.random() * (max - min)));\r\n\t\tsetAnswer(\"\");\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Your Score {score}</h1>\r\n\t\t\t<div className=\"display-num\">\r\n\t\t\t\t<h3>{num1}</h3>\r\n\t\t\t\t<h3>+</h3>\r\n\t\t\t\t<h3>{num2}</h3>\r\n\t\t\t</div>\r\n\r\n\t\t\t<input\r\n\t\t\t\tvalue={answer}\r\n\t\t\t\tonChange={handleInput}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tname=\"answer\"\r\n\t\t\t\tplaceholder=\"Answer..\"\r\n\t\t\t\tonKeyPress={handleAnswer}\r\n\t\t\t\tautoComplete=\"off\"\r\n\t\t\t/>\r\n\t\t\t<h4>{realAnswer}</h4>\r\n\t\t\t<h4>{myAnswer}</h4>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default AddComponent;\r\n","import \"./App.css\";\nimport AddComponent from \"./Components/AddComponent\";\n\nfunction App() {\n\treturn (\n\t\t<div className=\"main-page\">\n\t\t\t<p>Hello, Welcome to practice page Maths</p>\n\t\t\t<AddComponent />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}