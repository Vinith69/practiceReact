{"version":3,"sources":["Components/AddComponent.jsx","Components/SelectOperation.jsx","App.js","reportWebVitals.js","index.js"],"names":["AddComponent","operator","useState","Math","floor","random","num1","setNum1","num2","setNum2","score","setScore","realAnswer","setRealAnswer","myAnswer","setMyAnswer","answer","setAnswer","count","setCount","min","setMin","max","setMax","addFunction","e","console","log","output","parseInt","className","value","onChange","target","type","name","placeholder","onKeyPress","charCode","autoComplete","autoFocus","SelectOperation","setOperator","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.140713b8.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction AddComponent({ operator }) {\r\n\tconst [num1, setNum1] = useState(Math.floor(1 + Math.random() * (10 - 1)));\r\n\tconst [num2, setNum2] = useState(Math.floor(1 + Math.random() * (10 - 1)));\r\n\tconst [score, setScore] = useState(0);\r\n\tconst [realAnswer, setRealAnswer] = useState(\"\");\r\n\tconst [myAnswer, setMyAnswer] = useState(\"\");\r\n\tconst [answer, setAnswer] = useState(\"\");\r\n\tconst [count, setCount] = useState(0);\r\n\tconst [min, setMin] = useState(3);\r\n\tconst [max, setMax] = useState(10);\r\n\r\n\tconst handleAnswer = e => {\r\n\t\tif (e.charCode === 13) {\r\n\t\t\tif (answer !== \"\") addFunction(e);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleInput = e => {\r\n\t\tsetAnswer(e.target.value);\r\n\t};\r\n\r\n\tconst addFunction = e => {\r\n\t\t// let min = 3;\r\n\t\t// let max = 10;\r\n\t\tconsole.log(\"count\" + count, \"min\" + min, \"score\" + score);\r\n\r\n\t\tif (count === 3) {\r\n\t\t\tsetMin(min => min + 2);\r\n\t\t\tsetMax(max => max + 3);\r\n\t\t\tsetCount(0);\r\n\t\t}\r\n\t\tlet output = \"\";\r\n\t\t// let output = num1 + num2;\r\n\t\tif (operator === \"+\") output = num1 + num2;\r\n\t\tif (operator === \"-\") output = num1 - num2;\r\n\t\tif (operator === \"*\") output = num1 * num2;\r\n\t\tif (operator === \"/\") output = num1 / num2;\r\n\r\n\t\tsetRealAnswer(`Previous : ${num1} + ${num2} = ${output}`);\r\n\t\tsetMyAnswer(`Your answer was : ${answer}`);\r\n\r\n\t\tif (parseInt(answer) === output) {\r\n\t\t\tsetScore(score => score + 1);\r\n\t\t\tsetCount(count => count + 1);\r\n\t\t} else {\r\n\t\t\tif (score !== 0) {\r\n\t\t\t\tsetScore(score => score - 1);\r\n\t\t\t} else if (score === 0) {\r\n\t\t\t\tsetMin(3);\r\n\t\t\t\tsetMax(10);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsetNum1(Math.floor(min + Math.random() * (max - min)));\r\n\t\tsetNum2(Math.floor(min + Math.random() * (max - min)));\r\n\t\tsetAnswer(\"\");\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Your Score {score}</h1>\r\n\t\t\t<div className=\"display-num\">\r\n\t\t\t\t<h3>{num1}</h3>\r\n\t\t\t\t<h3>{operator}</h3>\r\n\t\t\t\t<h3>{num2}</h3>\r\n\t\t\t</div>\r\n\r\n\t\t\t<input\r\n\t\t\t\tvalue={answer}\r\n\t\t\t\tonChange={handleInput}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tname=\"answer\"\r\n\t\t\t\tplaceholder=\"Answer..\"\r\n\t\t\t\tonKeyPress={handleAnswer}\r\n\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\tautoFocus\r\n\t\t\t\tclassName=\"input\"\r\n\t\t\t/>\r\n\t\t\t<h4>{realAnswer}</h4>\r\n\t\t\t<h4>{myAnswer}</h4>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default AddComponent;\r\n","import React, { useState } from \"react\";\r\nimport AddComponent from \"./AddComponent\";\r\n\r\nfunction SelectOperation() {\r\n\tconst [operator, setOperator] = useState(\"+\");\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h5 className=\"operation-title\">Select operations</h5>\r\n\t\t\t<div className=\"operation-buttons\">\r\n\t\t\t\t<button onClick={() => setOperator(\"+\")}>+</button>\r\n\t\t\t\t<button onClick={() => setOperator(\"-\")}>-</button>\r\n\t\t\t\t<button onClick={() => setOperator(\"*\")}>*</button>\r\n\t\t\t\t<button onClick={() => setOperator(\"/\")}>/</button>\r\n\t\t\t</div>\r\n\t\t\t<AddComponent operator={operator} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SelectOperation;\r\n","import \"./App.css\";\nimport SelectOperation from './Components/SelectOperation';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"main-page\">\n\t\t\t<p>Hello, Welcome to Maths practice page </p>\n\t\t\t<SelectOperation/>\n\t\t\t\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}